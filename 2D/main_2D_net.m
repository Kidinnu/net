%
% Падение на сеть твердого тела 
%

% Положение центра масс 
rhoc = [5;1];

% Точки выпуклого многоугольника, описывающего форму тела относительно 
% центральной системы координат (обход точек против часовой стрелки)
params.pp = [0  0;
             8  0;
             14 2;
             14.5 3;
             0 3];
params.pp = params.pp - repmat(rhoc',size(params.pp,1),1);

% Объект считаетя абсолютно-твердым, поэтому 
% жесткость и коэффицент демпфирования взаимодействия сети с объектом
% будет определятся жесткостью узлов сети
params.c0 = 1e6;
params.k0 = 0;

% Количество узлов сети
params.n  = 80;

% Жесткость элементов, соединяющих узлы
params.c  = ones(1,params.n-1)*1e6/2.0;

% Коэффицент демпфирования
params.k  = ones(1,params.n-1)*2e5*0.5;

% Коэффициент трения
params.mu = 0.1;

% Массы узлов
params.masses = ones(1,params.n)*0.02;

% Масса тела
params.m0 = 1000;
% Момент инерции тела
params.J0 = 5000;

% Ускорение свободного падения
params.g  = [0;-9.81];

% Начальное положение сети. Сеть длиной 40 метров.
r0 = [linspace(-15,25,params.n);-2*ones(1,params.n)];
params.l0 = norm(r0(:,2)-r0(:,1));

% Начальная скорость узлов сети
v0 = zeros(2,params.n);

% Начальное положение тела
phi0 = deg2rad(40);

% Начальная угловая скорость тела 
wb0  =-deg2rad(80);

% Начальное положение 
rb0  = [-15;1]+[cos(phi0) -sin(phi0);sin(phi0) cos(phi0)]*rhoc;

% Начальная линейная скорость
Vb0  = (wb0*([cos(phi0) -sin(phi0);sin(phi0) cos(phi0)]*rhoc)'*[0 1;-1 0])';

% Начальный вектор состояния 
q0 = [rb0; phi0; r0(:); Vb0 ; wb0; v0(:)];


params.c  = ones(1,params.n-1)*1e6/8.0;
% Интегрируем 
opt = odeset('OutputFcn',@output_function,'RelTol',1e-5,'MaxStep',0.001);
[t, q] = ode23t(@(t,q) dqdt_2D_net(t, q, params), linspace(0,7.5,751), q0, opt);
% Сохраняем состояние
save 'case_test';
% Сохраняем видео
save_video;
